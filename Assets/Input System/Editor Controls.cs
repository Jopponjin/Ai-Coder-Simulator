//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input System/Editor Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @EditorControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @EditorControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Editor Controls"",
    ""maps"": [
        {
            ""name"": ""Editor"",
            ""id"": ""54eba028-5bcc-49a8-a75d-b307e147d71f"",
            ""actions"": [
                {
                    ""name"": ""Multi Select"",
                    ""type"": ""Button"",
                    ""id"": ""172a2444-1fba-4432-a202-af381bea1797"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Delete"",
                    ""type"": ""Button"",
                    ""id"": ""4c97ffdb-5b1f-4ba7-ab95-0fdc8c86c2c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grid Snap"",
                    ""type"": ""Button"",
                    ""id"": ""b84ea453-c546-4bf6-a504-63d8c37b97e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse Select"",
                    ""type"": ""Button"",
                    ""id"": ""61ddf476-8727-4f53-a836-b077ce0ed385"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Undo"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d6ece9a6-fece-4bfa-a240-4705f091d71b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Redo"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a7c2e218-3352-4d34-901c-6ba86f87f100"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c55c1714-e9a4-4372-80ad-ec3b604daf80"",
                    ""path"": ""<Keyboard>/delete"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Delete"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a3b9cb4-7ab8-4331-b466-7d08823de2f2"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grid Snap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f6d3cdc-d2ba-45de-8a2c-27c4ea171382"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""46cd32ff-34ba-4999-b7c2-522926f87a07"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Multi Select"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""259d2d1b-ea80-4d49-89d4-c5238ef0fafa"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Multi Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""eeda267b-fae3-40a8-9392-b4a58e4f0029"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Multi Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Editor
        m_Editor = asset.FindActionMap("Editor", throwIfNotFound: true);
        m_Editor_MultiSelect = m_Editor.FindAction("Multi Select", throwIfNotFound: true);
        m_Editor_Delete = m_Editor.FindAction("Delete", throwIfNotFound: true);
        m_Editor_GridSnap = m_Editor.FindAction("Grid Snap", throwIfNotFound: true);
        m_Editor_MouseSelect = m_Editor.FindAction("Mouse Select", throwIfNotFound: true);
        m_Editor_Undo = m_Editor.FindAction("Undo", throwIfNotFound: true);
        m_Editor_Redo = m_Editor.FindAction("Redo", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Editor
    private readonly InputActionMap m_Editor;
    private IEditorActions m_EditorActionsCallbackInterface;
    private readonly InputAction m_Editor_MultiSelect;
    private readonly InputAction m_Editor_Delete;
    private readonly InputAction m_Editor_GridSnap;
    private readonly InputAction m_Editor_MouseSelect;
    private readonly InputAction m_Editor_Undo;
    private readonly InputAction m_Editor_Redo;
    public struct EditorActions
    {
        private @EditorControls m_Wrapper;
        public EditorActions(@EditorControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MultiSelect => m_Wrapper.m_Editor_MultiSelect;
        public InputAction @Delete => m_Wrapper.m_Editor_Delete;
        public InputAction @GridSnap => m_Wrapper.m_Editor_GridSnap;
        public InputAction @MouseSelect => m_Wrapper.m_Editor_MouseSelect;
        public InputAction @Undo => m_Wrapper.m_Editor_Undo;
        public InputAction @Redo => m_Wrapper.m_Editor_Redo;
        public InputActionMap Get() { return m_Wrapper.m_Editor; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(EditorActions set) { return set.Get(); }
        public void SetCallbacks(IEditorActions instance)
        {
            if (m_Wrapper.m_EditorActionsCallbackInterface != null)
            {
                @MultiSelect.started -= m_Wrapper.m_EditorActionsCallbackInterface.OnMultiSelect;
                @MultiSelect.performed -= m_Wrapper.m_EditorActionsCallbackInterface.OnMultiSelect;
                @MultiSelect.canceled -= m_Wrapper.m_EditorActionsCallbackInterface.OnMultiSelect;
                @Delete.started -= m_Wrapper.m_EditorActionsCallbackInterface.OnDelete;
                @Delete.performed -= m_Wrapper.m_EditorActionsCallbackInterface.OnDelete;
                @Delete.canceled -= m_Wrapper.m_EditorActionsCallbackInterface.OnDelete;
                @GridSnap.started -= m_Wrapper.m_EditorActionsCallbackInterface.OnGridSnap;
                @GridSnap.performed -= m_Wrapper.m_EditorActionsCallbackInterface.OnGridSnap;
                @GridSnap.canceled -= m_Wrapper.m_EditorActionsCallbackInterface.OnGridSnap;
                @MouseSelect.started -= m_Wrapper.m_EditorActionsCallbackInterface.OnMouseSelect;
                @MouseSelect.performed -= m_Wrapper.m_EditorActionsCallbackInterface.OnMouseSelect;
                @MouseSelect.canceled -= m_Wrapper.m_EditorActionsCallbackInterface.OnMouseSelect;
                @Undo.started -= m_Wrapper.m_EditorActionsCallbackInterface.OnUndo;
                @Undo.performed -= m_Wrapper.m_EditorActionsCallbackInterface.OnUndo;
                @Undo.canceled -= m_Wrapper.m_EditorActionsCallbackInterface.OnUndo;
                @Redo.started -= m_Wrapper.m_EditorActionsCallbackInterface.OnRedo;
                @Redo.performed -= m_Wrapper.m_EditorActionsCallbackInterface.OnRedo;
                @Redo.canceled -= m_Wrapper.m_EditorActionsCallbackInterface.OnRedo;
            }
            m_Wrapper.m_EditorActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MultiSelect.started += instance.OnMultiSelect;
                @MultiSelect.performed += instance.OnMultiSelect;
                @MultiSelect.canceled += instance.OnMultiSelect;
                @Delete.started += instance.OnDelete;
                @Delete.performed += instance.OnDelete;
                @Delete.canceled += instance.OnDelete;
                @GridSnap.started += instance.OnGridSnap;
                @GridSnap.performed += instance.OnGridSnap;
                @GridSnap.canceled += instance.OnGridSnap;
                @MouseSelect.started += instance.OnMouseSelect;
                @MouseSelect.performed += instance.OnMouseSelect;
                @MouseSelect.canceled += instance.OnMouseSelect;
                @Undo.started += instance.OnUndo;
                @Undo.performed += instance.OnUndo;
                @Undo.canceled += instance.OnUndo;
                @Redo.started += instance.OnRedo;
                @Redo.performed += instance.OnRedo;
                @Redo.canceled += instance.OnRedo;
            }
        }
    }
    public EditorActions @Editor => new EditorActions(this);
    public interface IEditorActions
    {
        void OnMultiSelect(InputAction.CallbackContext context);
        void OnDelete(InputAction.CallbackContext context);
        void OnGridSnap(InputAction.CallbackContext context);
        void OnMouseSelect(InputAction.CallbackContext context);
        void OnUndo(InputAction.CallbackContext context);
        void OnRedo(InputAction.CallbackContext context);
    }
}
